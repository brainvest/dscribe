// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Migrations_Runtime_PostgreSql;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Migrations_Runtime_PostgreSql.Migrations.LobToolsDbContext_PostgreSqlMigrations
{
    [DbContext(typeof(LobToolsDbContext_PostgreSql))]
    [Migration("20190517152815_initialize_lob")]
    partial class initialize_lob
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Brainvest.Dscribe.LobTools.Entities.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("Data");

                    b.Property<string>("Description");

                    b.Property<int>("EntityTypeId");

                    b.Property<string>("FileName");

                    b.Property<int>("Identifier");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("Size");

                    b.Property<string>("Title");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("Brainvest.Dscribe.LobTools.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<int>("EntityTypeId");

                    b.Property<int>("Identifier");

                    b.Property<long?>("RequestLogId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Brainvest.Dscribe.LobTools.Entities.DataLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Body");

                    b.Property<long>("DataId");

                    b.Property<int>("DataRequestAction");

                    b.Property<long>("EntityId");

                    b.Property<long>("RequestLogId");

                    b.HasKey("Id");

                    b.HasIndex("RequestLogId");

                    b.ToTable("DataLogs");
                });

            modelBuilder.Entity("Brainvest.Dscribe.LobTools.Entities.Draft", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ActionTypeId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<int>("EntityTypeId");

                    b.Property<Guid>("Identifier");

                    b.Property<bool>("IsLastVersion");

                    b.Property<string>("JsonData");

                    b.Property<Guid?>("OwnerUserId");

                    b.Property<int>("Version");

                    b.HasKey("Id");

                    b.ToTable("Drafts");
                });

            modelBuilder.Entity("Brainvest.Dscribe.LobTools.Entities.RequestLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AppInstanceId");

                    b.Property<int?>("AppTypeId");

                    b.Property<string>("Body");

                    b.Property<int?>("EntityTypeId");

                    b.Property<string>("ExceptionMessage");

                    b.Property<string>("ExceptionTitle");

                    b.Property<bool>("Failed");

                    b.Property<bool>("HadException");

                    b.Property<string>("IpAddress");

                    b.Property<string>("Method");

                    b.Property<string>("Path");

                    b.Property<double>("ProcessDuration");

                    b.Property<int?>("PropertyId");

                    b.Property<string>("QueryString");

                    b.Property<long?>("RequestSize");

                    b.Property<string>("Response");

                    b.Property<long?>("ResponseSize");

                    b.Property<int>("ResponseStatusCode");

                    b.Property<DateTime>("StartTime");

                    b.Property<Guid?>("UserId");

                    b.HasKey("Id");

                    b.ToTable("RequestLogs");
                });

            modelBuilder.Entity("Brainvest.Dscribe.LobTools.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ExternalUserId");

                    b.Property<string>("UnifiedExternalUserId");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Brainvest.Dscribe.LobTools.Entities.DataLog", b =>
                {
                    b.HasOne("Brainvest.Dscribe.LobTools.Entities.RequestLog", "RequestLog")
                        .WithMany("DataLogs")
                        .HasForeignKey("RequestLogId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
